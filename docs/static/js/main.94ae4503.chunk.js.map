{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,0BAAMC,SAZc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACpBP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAmBM,OACrCL,EAAc,OAQd,2BACIM,KAAK,OACLC,MAAOR,EACPS,SApBW,SAACN,GACpBF,EAAcE,EAAEO,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCAHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAEZb,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoB1C,OAbIC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAIjB,CAACpB,IAIDqB,EDb8BI,CAAazB,GAAjCa,EAJsB,EAI3BN,KAAaa,EAJc,EAIdA,QAQrB,OACI,oCACI,wBAAIJ,UAAU,uDAAuDhB,GAEnEoB,GAAW,uBAAGJ,UAAU,qCAAb,WAEb,yBAAKA,UAAU,aAEHH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACAgB,IAAKhB,EAAIC,IACLD,UEIjBiB,EA9BM,WAAM,IAAD,EAEcxC,mBAAS,CAAC,cAFxB,mBAEfyC,EAFe,KAEH1C,EAFG,KAWtB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BACA,4BAEQ0C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA0B,IAAK1B,EACLA,SAAUA,UCnBlC6B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.94ae4503.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\nimport  PropTypes  from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputHandleValue=(e) =>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const submitEventHandle=(e) =>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.length > 2) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={submitEventHandle}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ inputHandleValue }\r\n                ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const getGifs = async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=10&api_key=CCqijh2xi5lGOHH2IJKbyq0GCECjWcDM`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { useState } from 'react';\r\n// import { useEffect } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     .then(setImages);\r\n    // }, [ category ])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__delay-2s\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__fadeIn\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( (img) =>(\r\n                            <GifGridItem\r\n                            key={img.id}\r\n                            {...img}>\r\n                            </GifGridItem>\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(img => {\r\n            setState({\r\n                data:img,\r\n                loading:false\r\n            })\r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\nreturn state;\r\n\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['one punch']);\r\n\r\n    // const handleAdd = () =>{\r\n\r\n        // setCategories([...categories,'HunterXHunter']);\r\n        // setCategories(['HunterXHunter',...categories]);\r\n        // setCategories(cats => [...cats,'HunterXHunter']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}></AddCategory>\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                        key={category}\r\n                        category={category}></GifGrid>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}